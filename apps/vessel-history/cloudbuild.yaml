steps:
  - name: 'gcr.io/$PROJECT_ID/restore_cache'
    id: restore_cache
    waitFor: ['-']
    script: |
      #!/usr/bin/env bash
      restore_cache \
        --bucket=gs://frontend-cache-dependencies \
        --key=node_modules-$( checksum yarn.lock )
      restore_cache \
        --bucket=gs://frontend-cache-dependencies \
        --key=yarn-$( checksum yarn.lock )
      restore_cache \
        --bucket=gs://frontend-cache-dependencies \
        --key=yarn-install-state-$( checksum yarn.lock )

  - id: 'install-yarn'
    waitFor: ['restore_cache']
    name: node:21
    script: |
      yarn set version 4.6.0
      yarn -v
      yarn install --immutable

  - id: 'save_cache'
    waitFor: ['install-yarn']
    name: 'gcr.io/$PROJECT_ID/restore_cache'
    script: |
      #!/usr/bin/env bash
      save_cache \
        --bucket=gs://frontend-cache-dependencies \
        --key=node_modules-$( checksum yarn.lock ) \
        --path=./node_modules \
        --no-clobber
      save_cache \
        --bucket=gs://frontend-cache-dependencies \
        --key=yarn-$( checksum yarn.lock ) \
        --path=.yarn/cache \
        --no-clobber
      save_cache \
        --bucket=gs://frontend-cache-dependencies \
        --key=yarn-install-state-$( checksum yarn.lock ) \
        --path=.yarn/install-state.gz \
        --no-clobber

  - id: 'build-app'
    waitFor: ['install-yarn']
    name: node:21
    env:
      - 'COMMIT_SHA=$COMMIT_SHA'
      - 'NX_CLOUD_AUTH_TOKEN=$_NX_CLOUD_AUTH_TOKEN'
      - 'NEXT_PUBLIC_URL=$_NEXT_PUBLIC_URL'
      - 'NEXT_PUBLIC_API_GATEWAY=$_NEXT_PUBLIC_API_GATEWAY'
      - 'NEXT_PUBLIC_GOOGLE_MEASUREMENT_ID=$_NEXT_PUBLIC_GOOGLE_MEASUREMENT_ID'
      - 'NEXT_PUBLIC_GOOGLE_TAG_MANAGER_ID=$_NEXT_PUBLIC_GOOGLE_TAG_MANAGER_ID'
      - 'NEXT_PUBLIC_GOOGLE_ANALYTICS_DEBUG_MODE=$_NEXT_PUBLIC_GOOGLE_ANALYTICS_DEBUG_MODE'
      - 'NEXT_PUBLIC_WORKSPACE_ENV=$_NEXT_PUBLIC_WORKSPACE_ENV'
      - 'NEXT_PUBLIC_TMT_CONTACT_US_URL=$_NEXT_PUBLIC_TMT_CONTACT_US_URL'
      - 'NEXT_PUBLIC_FEEDBACK_FORM_EN=$_NEXT_PUBLIC_FEEDBACK_FORM_EN'
      - 'NEXT_PUBLIC_FEEDBACK_FORM_FR=$_NEXT_PUBLIC_FEEDBACK_FORM_FR'
      - 'NEXT_CUSTOM_ACCESS_TOKEN=$_NEXT_CUSTOM_ACCESS_TOKEN'
    script: |
      yarn -v
      yarn nx run vessel-history:build:production --parallel

      raw_tag=" $COMMIT_SHA;$NEXT_PUBLIC_URL;$NEXT_PUBLIC_API_GATEWAY;$NEXT_PUBLIC_GOOGLE_MEASUREMENT_ID;$NEXT_PUBLIC_GOOGLE_TAG_MANAGER_ID;$NEXT_PUBLIC_GOOGLE_ANALYTICS_DEBUG_MODE;$NEXT_PUBLIC_WORKSPACE_ENV;$NEXT_PUBLIC_TMT_CONTACT_US_URL;$NEXT_PUBLIC_FEEDBACK_FORM_EN;$NEXT_PUBLIC_FEEDBACK_FORM_FR;$NEXT_CUSTOM_ACCESS_TOKEN"
      tag=`echo $raw_tag | sha256sum | cut -c1-64`
      echo $tag > image-tag
      echo Docker Image Tag: $tag

  - name: 'gcr.io/kaniko-project/executor:debug'
    id: 'build-image'
    waitFor: ['build-app']
    env:
      - 'USE_CACHE=$_USE_CACHE'
      - 'REF_NAME=$REF_NAME'
      - 'SHORT_SHA=$SHORT_SHA'
    entrypoint: ''
    script: |
      image_version=`echo $REF_NAME | grep -Eo "(develop)" || echo $REF_NAME | grep -Eo "vessel-history@([0-9].*)" | grep -Eo "([0-9].*)" || echo $SHORT_SHA`
      tag=`cat image-tag`
      /kaniko/executor \
        --destination=gcr.io/world-fishing-827/github.com/globalfishingwatch/vessel-history:latest \
        --destination=gcr.io/world-fishing-827/github.com/globalfishingwatch/vessel-history:$tag \
        --destination=gcr.io/world-fishing-827/github.com/globalfishingwatch/vessel-history:$image_version \
        --cache=$USE_CACHE \
        --build-arg \
          APP_NAME=vessel-history \
        --target \
          production \
        -f \
          ./apps/vessel-history/Dockerfile \
        -c \
          ./dist/apps/vessel-history \

  # Deploy to the appropriate environment
  - name: 'gcr.io/cloud-builders/gcloud'
    waitFor: ['build-image']
    id: 'deploy-cloud-run'
    entrypoint: 'bash'
    env:
      - '_RUN_SERVICE_NAME=$_RUN_SERVICE_NAME'
    args:
      - '-eEuo'
      - 'pipefail'
      - '-c'
      - |-
        tag=`cat image-tag`
        branch_service_name=`echo vessel-history-$BRANCH_NAME | sed -r 's,[/\.],-,g' | awk '{print substr(tolower($0),0,62)}'`
        service_name=${_RUN_SERVICE_NAME:-${branch_service_name}}
        gcloud beta run deploy \
        $service_name \
        --project \
        $_RUN_PROJECT \
        --image \
        gcr.io/world-fishing-827/github.com/globalfishingwatch/vessel-history:${tag} \
        --region \
        $_RUN_REGION \
        --platform managed \
        --set-env-vars \
        BASIC_AUTH=$_BASIC_AUTH \
        --set-env-vars \
        BASIC_AUTH_USER=$_BASIC_AUTH_USER \
        --set-env-vars \
        BASIC_AUTH_PASS=$_BASIC_AUTH_PASS \
        --allow-unauthenticated

  - id: 'i18n-labels publish stable'
    name: gcr.io/cloud-builders/gcloud
    waitFor: ['deploy-cloud-run']
    entrypoint: bash
    env:
      - '_NEXT_PUBLIC_WORKSPACE_ENV=$_NEXT_PUBLIC_WORKSPACE_ENV'
    args:
      - '-eEuo'
      - 'pipefail'
      - '-c'
      - |-
        workspace_env=${_NEXT_PUBLIC_WORKSPACE_ENV:-'development'}
        if [ $workspace_env = 'production' ]; then
          gcloud -q beta builds triggers run --branch=develop ui-libs-i18n-labels-stable
        fi

timeout: 1800s
options:
  machineType: 'E2_HIGHCPU_8'
