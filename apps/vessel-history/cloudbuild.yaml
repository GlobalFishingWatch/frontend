steps:
  - name: 'gcr.io/$PROJECT_ID/restore_cache'
    id: restore_cache
    waitFor: ['-']
    script: |
      #!/usr/bin/env bash
      restore_cache --bucket=gs://frontend-cache-dependencies --key=yarn-$( checksum yarn.lock ) --key_fallback=yarn3-cache

  - id: 'install-yarn'
    waitFor: ['restore_cache']
    name: node:18-alpine
    script: |
      if [ ! -d "node_modules" ]; then
        apk add git
        yarn set version 3.3.1
        yarn -v
        yarn install --immutable
      fi

  - id: 'save_cache'
    waitFor: ['install-yarn']
    name: 'gcr.io/$PROJECT_ID/restore_cache'
    env:
      - 'BRANCH_NAME=$BRANCH_NAME'
    script: |
      #!/usr/bin/env bash
      save_cache --bucket=gs://frontend-cache-dependencies --key=yarn-$( checksum yarn.lock ) --path=./node_modules --no-clobber
      if [ -d ".yarn/cache" ]; then
        if [ $BRANCH_NAME == "dev" ]; then
          save_cache --bucket=gs://frontend-cache-dependencies --key=yarn3-cache --path=./.yarn/cache
        fi
      fi

  - id: 'build-app'
    waitFor: ['install-yarn']
    name: node:18-alpine
    env:
      - 'NX_CLOUD_AUTH_TOKEN=$_NX_CLOUD_AUTH_TOKEN'
      - 'NEXT_PUBLIC_URL=$_NEXT_PUBLIC_URL'
      - 'NEXT_PUBLIC_API_GATEWAY=$_NEXT_PUBLIC_API_GATEWAY'
      - 'NEXT_PUBLIC_GOOGLE_MEASUREMENT_ID=$_NEXT_PUBLIC_GOOGLE_MEASUREMENT_ID'
      - 'NEXT_PUBLIC_GOOGLE_TAG_MANAGER_ID=$_NEXT_PUBLIC_GOOGLE_TAG_MANAGER_ID'
      - 'NEXT_PUBLIC_WORKSPACE_ENV=$_NEXT_PUBLIC_WORKSPACE_ENV'
      - 'NEXT_PUBLIC_TMT_CONTACT_US_URL=$_NEXT_PUBLIC_TMT_CONTACT_US_URL'
      - 'NEXT_PUBLIC_FEEDBACK_FORM_EN=$_NEXT_PUBLIC_FEEDBACK_FORM_EN'
      - 'NEXT_PUBLIC_FEEDBACK_FORM_FR=$_NEXT_PUBLIC_FEEDBACK_FORM_FR'
    script: |
      yarn -v
      yarn nx run vessel-history:build:production --parallel

      tag="${COMMIT_SHA};$NEXT_PUBLIC_URL;$NEXT_PUBLIC_API_GATEWAY;$NEXT_PUBLIC_WORKSPACE_ENV;$NEXT_PUBLIC_GOOGLE_MEASUREMENT_ID;$NEXT_PUBLIC_GOOGLE_TAG_MANAGER_KEY;$NEXT_PUBLIC_CARRIER_PORTAL_URL;$NEXT_PUBLIC_LATEST_CARRIER_DATASET_ID;$NEXT_PUBLIC_FEEDBACK_SPREADSHEET_ID;$NEXT_PUBLIC_SPREADSHEET_CLIENT_EMAIL;$NEXT_PUBLIC_SPREADSHEET_PRIVATE_KEY"
      tag=`echo $tag | md5sum`
      tag=${tag:0:32}
      echo $tag > image-tag

  - name: 'gcr.io/kaniko-project/executor:debug'
    id: 'build-image'
    waitFor: ['build-app']
    entrypoint: ''
    script: |
      tag=`cat image-tag`
      /kaniko/executor \
        --destination=gcr.io/world-fishing-827/github.com/globalfishingwatch/vessel-history:${tag} \
        --cache=$_USE_CACHE \
        --build-arg \
          APP_NAME=vessel-history \
        --target \
          production \
        -f \
          ./apps/vessel-history/Dockerfile \
        -c \
          ./dist/apps/vessel-history \

    # args:
    #   [
    #     '--destination=gcr.io/world-fishing-827/github.com/globalfishingwatch/vessel-history:$COMMIT_SHA',
    #     '--cache=$_USE_CACHE',
    #     '--build-arg',
    #     'APP_NAME=vessel-history',
    #     '--target',
    #     'production',
    #     '-f',
    #     './apps/vessel-history/Dockerfile',
    #     '-c',
    #     './dist/apps/vessel-history',
    #   ]

  # Deploy to the appropriate environment
  - name: 'gcr.io/cloud-builders/gcloud'
    waitFor: ['build-image']
    id: 'deploy-cloud-run'
    entrypoint: 'bash'
    env:
      - '_RUN_SERVICE_NAME=$_RUN_SERVICE_NAME'
    args:
      - '-eEuo'
      - 'pipefail'
      - '-c'
      - |-
        tag=`cat image-tag`
        branch_service_name=`echo vessel-history-$BRANCH_NAME | sed -r 's,[/\.],-,g' | awk '{print substr(tolower($0),0,62)}'`
        service_name=${_RUN_SERVICE_NAME:-${branch_service_name}}
        gcloud beta run deploy \
        $service_name \
        --project \
        $_RUN_PROJECT \
        --image \
        gcr.io/world-fishing-827/github.com/globalfishingwatch/vessel-history:${tag} \
        --region \
        $_RUN_REGION \
        --platform managed \
        --set-env-vars \
        BASIC_AUTH=$_BASIC_AUTH \
        --set-env-vars \
        BASIC_AUTH_USER=$_BASIC_AUTH_USER \
        --set-env-vars \
        BASIC_AUTH_PASS=$_BASIC_AUTH_PASS \
        --allow-unauthenticated

  - id: 'i18n-labels publish stable'
    name: gcr.io/cloud-builders/gcloud
    waitFor: ['deploy-cloud-run']
    entrypoint: bash
    env:
      - '_NEXT_PUBLIC_WORKSPACE_ENV=$_NEXT_PUBLIC_WORKSPACE_ENV'
    args:
      - '-eEuo'
      - 'pipefail'
      - '-c'
      - |-
        workspace_env=${_NEXT_PUBLIC_WORKSPACE_ENV:-'development'}
        if [ $workspace_env = 'production' ]; then
          gcloud -q beta builds triggers run --branch=develop ui-libs-i18n-labels-stable
        fi

timeout: 1800s
options:
  machineType: 'E2_HIGHCPU_8'
