steps:
  - name: 'gcr.io/$PROJECT_ID/restore_cache'
    id: restore_cache
    waitFor: ['-']
    script: |
      #!/usr/bin/env bash
      restore_cache \
        --bucket=gs://frontend-cache-dependencies \
        --key=node_modules-$( checksum yarn.lock )
      restore_cache \
        --bucket=gs://frontend-cache-dependencies \
        --key=yarn-$( checksum yarn.lock )
      restore_cache \
        --bucket=gs://frontend-cache-dependencies \
        --key=yarn-install-state-$( checksum yarn.lock )

  - id: 'install-yarn'
    waitFor: ['restore_cache']
    name: node:21
    script: |
      yarn set version 4.6.0
      yarn -v
      yarn install --immutable

  - id: 'save_cache'
    waitFor: ['install-yarn']
    name: 'gcr.io/$PROJECT_ID/restore_cache'
    script: |
      #!/usr/bin/env bash
      save_cache \
        --bucket=gs://frontend-cache-dependencies \
        --key=node_modules-$( checksum yarn.lock ) \
        --path=./node_modules \
        --no-clobber
      save_cache \
        --bucket=gs://frontend-cache-dependencies \
        --key=yarn-$( checksum yarn.lock ) \
        --path=.yarn/cache \
        --no-clobber
      save_cache \
        --bucket=gs://frontend-cache-dependencies \
        --key=yarn-install-state-$( checksum yarn.lock ) \
        --path=.yarn/install-state.gz \
        --no-clobber

  - id: 'test'
    waitFor: ['install-yarn']
    name: node:21
    entrypoint: yarn
    args: ['nx', 'test', 'vessel-history']

timeout: 600s
