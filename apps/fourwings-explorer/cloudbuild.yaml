steps:
  - name: 'gcr.io/$PROJECT_ID/restore_cache'
    id: restore_cache
    waitFor: ['-']
    args:
      - '--bucket=gs://frontend-cache-dependencies'
      - '--key=yarn-$( checksum yarn.lock )'

  - id: 'install-yarn'
    waitFor: ['restore_cache']
    name: gcr.io/cloud-builders/yarn:latest
    entrypoint: bash
    args:
      - '-c'
      # if dependencies cache is not found then install all deps
      - |
        if [ ! -d "node_modules" ]; then
          yarn install --frozen-lockfile
        fi

  - id: 'save_cache'
    waitFor: ['install-yarn']
    name: 'gcr.io/$PROJECT_ID/save_cache'
    args:
      - '--bucket=gs://frontend-cache-dependencies'
      - '--key=yarn-$( checksum yarn.lock )'
      - '--path=./node_modules'
      - '--no-clobber'

  - id: 'build-app'
    waitFor: ['install-yarn']
    name: gcr.io/cloud-builders/yarn:latest
    entrypoint: yarn
    args: ['nx', 'build', 'fourwings-explorer', '--parallel']
    env:
      - 'NX_BRANCH=$_NX_BRANCH'
      - 'NX_CLOUD_AUTH_TOKEN=$_NX_CLOUD_AUTH_TOKEN'
      - 'NEXT_PUBLIC_API_GATEWAY=$_NEXT_PUBLIC_API_GATEWAY'

  - id: 'zip'
    waitFor: ['build-app']
    name: node:14
    entrypoint: yarn
    args: ['nx', 'zip', 'fourwings-explorer']

  - name: 'gcr.io/cloud-builders/gsutil'
    args: ['cp', './dist.zip', 'gs://geotemporal-data-explorer-releases/ui/latest.zip']

timeout: 1800s
options:
  machineType: 'E2_HIGHCPU_8'
