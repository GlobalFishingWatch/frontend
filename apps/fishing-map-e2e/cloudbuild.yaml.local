steps:
  - name: 'gcr.io/$PROJECT_ID/restore_cache'
    id: restore_cache
    waitFor: ['-']
    script: |
      #!/usr/bin/env bash
      restore_cache \
        --bucket=gs://frontend-cache-dependencies \
        --key=yarn-$( checksum yarn.lock ) \
        --key_fallback=yarn3-cache

  - id: 'generate-cypress-lock'
    waitFor: ['restore_cache']
    name: node:18-alpine
    script: |
      if [ -d "node_modules" ]; then
        yarn info cypress version > cypress.lock
      fi

  - name: 'gcr.io/$PROJECT_ID/restore_cache'
    id: restore_cypress_cache
    waitFor: ['generate-cypress-lock']
    script: |
      #!/usr/bin/env bash
      if [ -d "node_modules" ]; then
        restore_cache \
          --bucket=gs://frontend-cache-dependencies \
          --key=cypress-$( checksum cypress.lock ) \
          --key_fallback=cypress-cache
      fi

  - id: 'install-yarn'
    waitFor: ['restore_cache']
    name: cypress/included:12.10.0
    script: |
      if [ ! -d "node_modules" ]; then
        apk add git
        yarn set version 3.3.1
        yarn -v
        CYPRESS_CACHE_FOLDER=.cypress-cache yarn install --immutable
        yarn info cypress version > cypress.lock
      fi

  - id: 'save_cache'
    waitFor: ['install-yarn']
    name: 'gcr.io/$PROJECT_ID/restore_cache'
    env:
      - 'BRANCH_NAME=$BRANCH_NAME'
    script: |
      #!/usr/bin/env bash
      save_cache \
        --bucket=gs://frontend-cache-dependencies \
        --key=yarn-$( checksum yarn.lock ) \
        --path=./node_modules \
        --no-clobber
      save_cache \
        --bucket=gs://frontend-cache-dependencies \
        --key=cypress-$( checksum cypress.lock ) \
        --path=.cypress-cache \
        --no-clobber
      if [ -d ".yarn/cache" ]; then
        if [ $BRANCH_NAME == "dev" ]; then
          save_cache \
            --bucket=gs://frontend-cache-dependencies \
            --key=yarn3-cache \
            --path=./.yarn/cache
        fi
      fi

  # Deploy to the appropriate environment
  - name: 'gcr.io/cloud-builders/gcloud'
    waitFor: ['install-yarn']
    id: 'get-app-url'
    entrypoint: 'bash'
    env:
      - '_RUN_SERVICE_NAME=$_RUN_SERVICE_NAME'
    args:
      - '-eEuo'
      - 'pipefail'
      - '-c'
      - |-
        branch_service_name=`echo fishing-map-$BRANCH_NAME | sed -r 's,[/\.],-,g' | awk '{print substr(tolower($0),0,62)}'`
        service_name=${_RUN_SERVICE_NAME:-${branch_service_name}}
        gcloud run services describe $service_name \
           --platform managed \
           --region $_RUN_REGION \
           --format 'value(status.url)' > app_url

  - id: 'smoke-test-e2e'
    waitFor: ['get-app-url']
    name: cypress/included:12.10.0
    entrypoint: 'bash'
    env:
      - 'CYPRESS_basicAuth=$_BASIC_AUTH'
      - 'CYPRESS_basicAuthUser=$_BASIC_AUTH_USER'
      - 'CYPRESS_basicAuthPass=$_BASIC_AUTH_PASS'
      - 'CYPRESS_apiAuthUser=$_CYPRESS_API_AUTH_USER'
      - 'CYPRESS_apiAuthPass=$_CYPRESS_API_AUTH_PASS'
      - 'CYPRESS_apiUserInitials=$_CYPRESS_API_USER_INITIALS'
    args:
      - '-eEuo'
      - 'pipefail'
      - '-c'
      - |-
        CYPRESS_BASE_URL=`cat app_url` \
          CYPRESS_CACHE_FOLDER=.cypress-cache \
          yarn nx run fishing-map-e2e:test-dev --parallel

timeout: 1800s
options:
  machineType: 'E2_HIGHCPU_8'
