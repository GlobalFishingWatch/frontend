steps:
  - name: 'node:12'
    entrypoint: 'yarn'
    id: 'install monorepo dependencies'
    args: ['install']
  - name: 'node:12'
    entrypoint: 'yarn'
    id: 'build monorepo packages'
    args: ['build']
  - name: 'node:12'
    entrypoint: 'bash'
    id: 'copy packages to app'
    args:
      - '-eEuo'
      - 'pipefail'
      - '-c'
      - |-
        cp -r --remove-destination --parents -L ./node_modules/@globalfishingwatch ./applications/vessel-history

  # Push build image to GCR
  - name: 'gcr.io/kaniko-project/executor:latest'
    id: 'Push build image to GCR'
    args:
      [
        '--destination=gcr.io/world-fishing-827/github.com/globalfishingwatch/vessel-history:$COMMIT_SHA',
        '--cache=$_USE_DOCKER_CACHE',
        '--build-arg',
        'REACT_APP_GOOGLE_TAG_MANAGER_KEY=$_REACT_APP_GOOGLE_TAG_MANAGER_KEY',
        '--build-arg',
        'REACT_APP_API_GATEWAY=$_REACT_APP_API_GATEWAY',
        '--build-arg',
        'REACT_APP_WORKSPACE_ENV=$_REACT_APP_WORKSPACE_ENV',
        '--build-arg',
        'REACT_APP_LIMITED_ACCESS_USER=$_REACT_APP_LIMITED_ACCESS_USER',
        '--build-arg',
        'BASIC_AUTH_USER=$_BASIC_AUTH_USER',
        '--build-arg',
        'BASIC_AUTH_PASS=$_BASIC_AUTH_PASS',
        '--target',
        'build',
        '-f',
        './applications/vessel-history/Dockerfile',
        '-c',
        './applications/vessel-history',
      ]
  # Run tests using build image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Run tests'
    args:
      [
        'run',
        'gcr.io/world-fishing-827/github.com/globalfishingwatch/vessel-history:$COMMIT_SHA',
        'npm',
        'test',
      ]
  # Build and Push production image to GCR
  - name: 'gcr.io/kaniko-project/executor:latest'
    id: 'Build and Push production image to GCR'
    args:
      [
        '--destination=gcr.io/world-fishing-827/github.com/globalfishingwatch/vessel-history:$COMMIT_SHA',
        '--cache=true',
        '--build-arg',
        'REACT_APP_GOOGLE_TAG_MANAGER_KEY=$_REACT_APP_GOOGLE_TAG_MANAGER_KEY',
        '--build-arg',
        'REACT_APP_API_GATEWAY=$_REACT_APP_API_GATEWAY',
        '--build-arg',
        'REACT_APP_WORKSPACE_ENV=$_REACT_APP_WORKSPACE_ENV',
        '--build-arg',
        'REACT_APP_LIMITED_ACCESS_USER=$_REACT_APP_LIMITED_ACCESS_USER',
        '--build-arg',
        'BASIC_AUTH_USER=$_BASIC_AUTH_USER',
        '--build-arg',
        'BASIC_AUTH_PASS=$_BASIC_AUTH_PASS',
        '--target',
        'production',
        '-f',
        './applications/vessel-history/Dockerfile',
        '-c',
        './applications/vessel-history',
      ]

  # Deploy to the appropriate environment
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'Deploy to the appropriate environment'
    entrypoint: 'bash'
    args:
      - '-eEuo'
      - 'pipefail'
      - '-c'
      - |-
        gcloud beta run deploy \
        vessel-history-`echo $BRANCH_NAME | sed -r 's,[/\.],-,g' | awk '{print tolower($0)}'` \
        --project \
        $_RUN_PROJECT \
        --image \
        gcr.io/world-fishing-827/github.com/globalfishingwatch/vessel-history:$COMMIT_SHA \
        --region \
        $_RUN_REGION \
        --platform managed \
        --set-env-vars \
        BASIC_AUTH=$_BASIC_AUTH \
        --allow-unauthenticated

timeout: 1800s
