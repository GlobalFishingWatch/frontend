name: fishing-map ðŸš€ to dev

# on:
#   pull_request:
#     types: [closed]
#     branches:
#       - develop
on:
  push:
    branches:
      - monorepo-update
  workflow_dispatch:

env:
  NX_CLOUD_AUTH_TOKEN: ${{ secrets.NX_CLOUD_AUTH_TOKEN }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: fishing-dev
    env:
      BASIC_AUTH_PASS: ${{ secrets._BASIC_AUTH_PASS }}
      BASIC_AUTH_USER: ${{ secrets._BASIC_AUTH_USER }}
      BASIC_AUTH: ${{ secrets._BASIC_AUTH }}
      RUN_PROJECT: ${{ secrets._RUN_PROJECT }}
      RUN_REGION: ${{ secrets._RUN_REGION }}
      RUN_SERVICE_NAME: ${{ secrets._RUN_SERVICE_NAME }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup NodeJS 14
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Install yarn
        run: npm install -g yarn

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Set yarn global bin path
        run: yarn config set prefix $(yarn cache dir)

      - name: Add yarn bin path to system path
        run: echo "$(yarn global bin)" >> $GITHUB_PATH

      - name: Set yarn global installation path
        run: yarn config set global-folder $(yarn cache dir)

      - name: Cache yarn dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            **\node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Build and deploy
        env:
          REACT_APP_API_GATEWAY: ${{ secrets._REACT_APP_API_GATEWAY }}
          REACT_APP_CARRIER_PORTAL_URL_: ${{ secrets._REACT_APP_CARRIER_PORTAL_URL_ }}
          REACT_APP_FEEDBACK_SPREADSHEET_ID: ${{ secrets._REACT_APP_FEEDBACK_SPREADSHEET_ID }}
          REACT_APP_GOOGLE_MEASUREMENT_ID: ${{ secrets._REACT_APP_GOOGLE_MEASUREMENT_ID }}
          REACT_APP_GOOGLE_TAG_MANAGER_KEY: ${{ secrets._REACT_APP_GOOGLE_TAG_MANAGER_KEY }}
          REACT_APP_GOOGLE_UNIVERSAL_ANALYTICS_ID: ${{ secrets._REACT_APP_GOOGLE_UNIVERSAL_ANALYTICS_ID }}
          REACT_APP_LATEST_CARRIER_DATASET_ID: ${{ secrets._REACT_APP_LATEST_CARRIER_DATASET_ID }}
          REACT_APP_SPREADSHEET_CLIENT_EMAIL: ${{ secrets._REACT_APP_SPREADSHEET_CLIENT_EMAIL }}
          REACT_APP_SPREADSHEET_PRIVATE_KEY: ${{ secrets._REACT_APP_SPREADSHEET_PRIVATE_KEY }}
          REACT_APP_USE_PRESENCE_POC: ${{ secrets._REACT_APP_USE_PRESENCE_POC }}
          REACT_APP_WORKSPACE_ENV: ${{ secrets._REACT_APP_WORKSPACE_ENV }}
          REACT_APP_WORKSPACES_SPREADSHEET_ID: ${{ secrets._REACT_APP_WORKSPACES_SPREADSHEET_ID }}
          SKIP_PREFLIGHT_CHECK: true
        run: yarn nx deploy fishing-map

      - name: Setup & login to gcloud
        uses: google-github-actions/setup-gcloud@master
        with:
          version: '286.0.0'
          service_account_email: ${{ secrets.RUN_SA_EMAIL }}
          service_account_key: ${{ secrets.RUN_SA_KEY }}
          project_id: ${{ secrets.RUN_PROJECT }}
          export_default_credentials: true

      - name: Authorize Docker push
        run: gcloud auth configure-docker

      - name: Build and Push Container
        run: |-
          docker build -f ./applications/fishing-map/Dockerfile -t gcr.io/${{ env.RUN_PROJECT }}/${{ env.RUN_SERVICE_NAME }}:${{  github.sha }} ./dist/applications/fishing-map
          docker push gcr.io/${{ env.RUN_PROJECT }}/${{ env.RUN_SERVICE_NAME }}:${{  github.sha }}

      - name: Deploy to Cloud Run
        run: |-
          gcloud run deploy ${{ env.RUN_SERVICE_NAME }} \
            --region ${{ env.REGION }} \
            --image gcr.io/${{ env.RUN_PROJECT }}/${{ env.RUN_SERVICE_NAME }}:${{  github.sha }} \
            --platform "managed" \
            --quiet
