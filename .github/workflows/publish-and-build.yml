name: Publish packages in npm registry

on:
  push:
    branches:
      - develop
    paths-ignore:
      - '.changesets/**/*.md'

jobs:
  publish-npm:
    name: Publish to NPM
    runs-on: ubuntu-latest
    steps:
      - run: echo "ACTIONS_ALLOW_UNSECURE_COMMANDS=true" >> $GITHUB_ENV
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Set yarn global bin path
        run: yarn config set prefix $(yarn cache dir)

      - name: Add yarn bin path to system path
        run: echo "::add-path::$(yarn global bin)"

      - name: Set yarn global installation path
        run: yarn config set global-folder $(yarn cache dir)

      - name: Hit yarn cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install Dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Run tests
        run: yarn test

      - name: Release changes using lerna from package
        run: yarn release:ci
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}

      - name: Sleep for 120 seconds to ensure npm packages are discoverables
        uses: jakejarvis/wait-action@master
        with:
          time: '120s'

  trigger-gcloud-build:
    name: Trigger gcloud builds
    runs-on: ubuntu-latest
    needs: publish-npm
    steps:
      - uses: google-github-actions/setup-gcloud@master
        with:
          version: '286.0.0'
          service_account_email: ${{ secrets.RUN_SA_EMAIL }}
          service_account_key: ${{ secrets.RUN_SA_KEY }}
          project_id: ${{ secrets.RUN_PROJECT }}

      # Build and push image to Google Container Registry
      - name: Install gcloud beta
        run: |-
          gcloud -q components install beta

      # Remove comments once we are back to amathea
      # - name: Trigger amathea build
      #   run: |-
      #     gcloud -q beta builds triggers run --branch=develop ui-amateha-push-develop

      - name: Trigger fishing-map build
        run: |-
          gcloud -q beta builds triggers run --branch=develop ui-fishing-map-push-develop

      - name: Trigger vessel-history build
        run: |-
          gcloud -q beta builds triggers run --branch=develop ui-vessel-history-push-to-develop
