steps:
  - name: 'gcr.io/$PROJECT_ID/restore_cache'
    id: restore_cache
    waitFor: ['-']
    script: |
      #!/usr/bin/env bash
      restore_cache \
        --bucket=gs://frontend-cache-dependencies \
        --key=node_modules-$( checksum yarn.lock )
      restore_cache \
        --bucket=gs://frontend-cache-dependencies \
        --key=yarn-$( checksum yarn.lock )
      restore_cache \
        --bucket=gs://frontend-cache-dependencies \
        --key=yarn-install-state-$( checksum yarn.lock )

  - id: 'install-yarn'
    waitFor: ['restore_cache']
    name: node:21
    script: |
      yarn set version 4.6.0
      yarn -v
      yarn install --immutable

  - id: 'save_cache'
    waitFor: ['install-yarn']
    name: 'gcr.io/$PROJECT_ID/restore_cache'
    script: |
      #!/usr/bin/env bash
      save_cache \
        --bucket=gs://frontend-cache-dependencies \
        --key=node_modules-$( checksum yarn.lock ) \
        --path=./node_modules \
        --no-clobber
      save_cache \
        --bucket=gs://frontend-cache-dependencies \
        --key=yarn-$( checksum yarn.lock ) \
        --path=.yarn/cache \
        --no-clobber
      save_cache \
        --bucket=gs://frontend-cache-dependencies \
        --key=yarn-install-state-$( checksum yarn.lock ) \
        --path=.yarn/install-state.gz \
        --no-clobber

  - id: 'setup auth to npmjs'
    waitFor: ['install-yarn']
    name: node:21
    args:
      - '-c'
      - |
        echo "//registry.npmjs.org/:_authToken=$$NODE_AUTH_TOKEN" > .npmrc
    entrypoint: bash
    secretEnv:
      - NODE_AUTH_TOKEN

  - id: 'i18n-labels publish stable'
    waitFor: ['setup auth to npmjs']
    name: node:21
    env:
      - 'NX_CLOUD_AUTH_TOKEN=$_NX_CLOUD_AUTH_TOKEN'
    entrypoint: npx
    args: ['nx', 'publish:stable', 'i18n-labels']

  - id: 'i18n-labels purge stable'
    waitFor: ['i18n-labels publish stable']
    name: node:21
    env:
      - 'NX_CLOUD_AUTH_TOKEN=$_NX_CLOUD_AUTH_TOKEN'
    entrypoint: npx
    args: ['nx', 'purge:stable', 'i18n-labels']

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/NPM_TOKEN/versions/latest
      env: NODE_AUTH_TOKEN

timeout: 1800s
