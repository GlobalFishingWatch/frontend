diff --git a/build/src/gaxios.js b/build/src/gaxios.js
index b9fc1c0978857f2dcb954ce154049b74858e5dcd..336387bf7b8c9d4f87113a5e545babbf4e1d279d 100644
--- a/build/src/gaxios.js
+++ b/build/src/gaxios.js
@@ -273,7 +273,7 @@ class Gaxios {
 exports.Gaxios = Gaxios;
 _a = Gaxios, _Gaxios_instances = new WeakSet(), _Gaxios_urlMayUseProxy = function _Gaxios_urlMayUseProxy(url, noProxy = []) {
     var _b, _c;
-    const candidate = new url_1.URL(url);
+    const candidate = new url_1.Url(url);
     const noProxyList = [...noProxy];
     const noProxyEnvList = ((_c = ((_b = process.env.NO_PROXY) !== null && _b !== void 0 ? _b : process.env.no_proxy)) === null || _c === void 0 ? void 0 : _c.split(',')) || [];
     for (const rule of noProxyEnvList) {
@@ -307,7 +307,7 @@ _a = Gaxios, _Gaxios_instances = new WeakSet(), _Gaxios_urlMayUseProxy = functio
         }
     }
     return true;
-}, _Gaxios_applyRequestInterceptors =
+}, _Gaxios_applyRequestInterceptors =
 /**
  * Applies the request interceptors. The request interceptors are applied after the
  * call to prepareRequest is completed.
@@ -324,7 +324,7 @@ async function _Gaxios_applyRequestInterceptors(options) {
         }
     }
     return promiseChain;
-}, _Gaxios_applyResponseInterceptors =
+}, _Gaxios_applyResponseInterceptors =
 /**
  * Applies the response interceptors. The response interceptors are applied after the
  * call to request is made.
@@ -341,7 +341,7 @@ async function _Gaxios_applyResponseInterceptors(response) {
         }
     }
     return promiseChain;
-}, _Gaxios_prepareRequest =
+}, _Gaxios_prepareRequest =
 /**
  * Validates the options, merges them with defaults, and prepare request.
  *
