version: '3.9'
services:
  map:
    build:
      context: ./dist/apps/fishing-map
      dockerfile: ../../../apps/fishing-map/Dockerfile
    container_name: map
    expose:
      - '80'
    volumes:
      - ./dist/apps/fishing-map/exported:/usr/share/nginx/www
    env_file:
      - apps/fishing-map/.build.env
    environment:
      - NEXT_PUBLIC_WORKSPACE_ENV=development
      - NEXT_PUBLIC_API_GATEWAY=https://gateway.api.dev.globalfishingwatch.org/
      - PORT=80
      - BASIC_AUTH=off
    networks:
      - frontend-network

  vessel-viewer:
    build:
      context: ./dist/apps/vessel-history
      dockerfile: ../../../apps/vessel-history/Dockerfile
    container_name: vessel-viewer
    expose:
      - '80'
    volumes:
      - ./dist/apps/vessel-history/exported:/usr/share/nginx/www
    env_file:
      - apps/vessel-history/.build.env
    environment:
      - NEXT_PUBLIC_WORKSPACE_ENV=development
      - NEXT_PUBLIC_API_GATEWAY=https://gateway.api.dev.globalfishingwatch.org/
      - PORT=80
      - BASIC_AUTH=off
    networks:
      - frontend-network

  webserver:
    # restart: always
    image: nginx:stable-alpine
    container_name: webserver
    ports:
      - 80:80
      - 443:443
    links:
      - vessel-viewer
    depends_on:
      - vessel-viewer
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
      - ./config/ssl:/etc/nginx/ssl
    networks:
      - frontend-network

networks:
  frontend-network:
